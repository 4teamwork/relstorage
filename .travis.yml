language: python
dist: xenial
group: travis_latest
services:
  - mysql
  - postgresql
  - memcached
addons:
# Use postgresql 9.3 to get commit-lock testing
# Use postgresql 9.4 to get support for BLOB SQL functions for pg8000
# Use postgresql 9.5 to get support for INSERT ON CONFLICT UPDATE
# Use postgresql 9.6 ... just because
  postgresql: "9.6"

env:
    global:
        - PYTHONHASHSEED=8675309
        - CC="ccache gcc"
        - CCACHE_NOCPP2=true
        - CCACHE_SLOPPINESS=file_macro,time_macros,include_file_ctime,include_file_mtime
        - CCACHE_NOHASHDIR=true
        - CFLAGS="-g -pipe"

matrix:
  include:
    - python: 2.7
      env:
        - ENV=cmysqlconnector
        - RS_MY_DRIVER="C MySQL Connector/Python"
    - python: 3.7
      env: ENV=mysqlconnector

    # This fails under mysql-connector-python 8.0.6 and pyPy 7.1.1
    # with lots of 'InterfaceError: Use multi=True when executing
    # multiple statements', even though it works under CPython.
    # - python: pypy
    #   env: ENV=mysqlconnector

    # XXX: All Python 3 tests fail here with mysqlclient-1.4.2.post1,
    # mysql 5.7.25, producing 'LookupError: unknown encoding: binary'.
    # This worked with mysqlclient-1.3.14, mysql 5.6.33
    - python: 3.6
      env: ENV=mysql
    - python: 3.7
      env: ENV=mysql
    - python: 3.5
      env: ENV=mysql
    - python: 2.7
      env: ENV=mysql

    - python: pypy
      env: ENV=mysql
    - python: pypy3
      env: ENV=mysql

    - python: 3.7
      env: ENV=pymysql
    - python: 2.7
      env: ENV=pymysql

    - python: 2.7
      env: ENV=umysqldb

    - env: ENV=postgres
      python: 2.7
    - env: ENV=postgres
      python: pypy
    - env: ENV=postgres
      python: pypy3
    - env: ENV=postgres
      python: 3.6
    - env: ENV=postgres
      python: 3.7

    - env: ENV=pypostgres
      python: 2.7
    - env: ENV=pypostgres
      python: 3.7

  fast_finish: true
script:
# coverage slows PyPy down from 2minutes to 12+.
# But don't run the pymysql/pypy tests twice.
  - if [[ $TRAVIS_PYTHON_VERSION == 3.7 ]]; then pylint --rcfile=.pylintrc relstorage -f parseable -r n; fi
  - if [[ $TRAVIS_PYTHON_VERSION == pypy* ]]; then python -m relstorage.tests.alltests -v; fi
  - if [[ $TRAVIS_PYTHON_VERSION != pypy* ]]; then coverage run -m relstorage.tests.alltests -v; fi
after_success:
  - coveralls
notifications:
  email: false

before_install:
  - python --version
before_script:
  - ccache -s

install:
  - pip install -U pip
  - pip install -U setuptools wheel coveralls
  - pip install -U "pylint>=1.7.1"
  - pip install -U 'cffi; platform_python_implementation=="CPython"'
  - pip install -U -e ".[test]"
  - .travis/setup-$ENV.sh

cache:
  pip: true
  directories:
    - $HOME/.wheelhouse
    - $HOME/.ccache

before_cache:
    - rm -f $HOME/.cache/pip/log/debug.log
